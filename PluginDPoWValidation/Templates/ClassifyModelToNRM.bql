Open model from file 'd:\CODE\Sample_IFC\Simple_house.ifc';
Create classification NRM;

//**********************************  External Walls  ***************************************
$extWallsGroup = every system where description = 'External Walls';

//select elements
$extWalls is every IfcCurtainWall;

$extWalls is every wall where 
	name contains 'Ext' or 
	Function is 1 or 
	IsExternal is true or 
	type name contains 'Ext' or 
	type function is 1 or 
	type 'IsExternal' is true
	;

$extWalls is every covering where
	predefined type is cladding or
	predefined type is insulation or
	type predefined type is cladding
	;

$extWalls is every member where 
	type predefined type is 'STUD'
	;

$extWalls is every plate where 
	type predefined type is 'CURTAIN_PANEL'
	;

Add $extWalls to $extWallsGroup;


//*********************************  Basement Retaining Walls  ************************************
$basementWallsGroup is every system where description is 'Basement Retaining Walls';

$basementWalls is every wall where 
	name contains 'Retaining' or
	type name contains 'Retaining'
	;

Add $basementWalls to $basementWallsGroup;

//*************************************  Foundations  *****************************************
$foundationsGroup = every system where description is 'Foundations';

$foundations is every IfcWall where 
	name contains 'Footing' or
	name contains 'Foundation' or
	type name contains 'Footing' or
	type name contains 'Foundation'
	;

Add $foundations to $foundationsGroup;

//****************************  Internal Walls and Partitions  ***********************************
$intWallsGroup is every system where description contains 'Internal Walls and Partitions';

$intWalls is every wall where group description is not 'External Walls';

Add $intWalls to $intWallsGroup;

//**********************************  Ground Floor Construction  *********************************
$groundGroup = every group where description is 'Ground Floor Construction';

$ground is every slab where
	predefined type is 'SLAB' or
	name contains 'GS' or
	name contains 'GND' or
	function is 1 or
	IsExternal is true or
	type predefined type is 'SLAB' or
	type name contains 'GS' or
	type name contains 'GND'
	;

Add $ground to $groundGroup;

//**************************************  Upper Floors  *******************************************
$upperFloorGroup is every system where description is 'Upper Floors';

$upperFloor is every slab where
	predefined type is 'FLOOR' or
	name contains 'Susp' or
	function is 0 or
	IsExternal is false or
	type predefined type is 'FLOOR' or
	type name contains 'Susp'
	;

Add $upperFloor to $upperFloorGroup;

//*********************************  Roof  *******************************************
$roofGroup is every group where description is 'Roof';

$roof is every slab where
	predefined type is 'ROOF' or
	name contains 'Roof' or
	'Name' is 'Roof' or
	type predefined type is 'ROOF'
	;

$roof is every FlowSegment where
	type predefined type is 'GUTTER' or
	name contains 'gutter'
	;

Add $roof to $roofGroup;

//*********************************  Windows and External Doors  *********************************
$winDoorGroup is every group where description is 'Windows and External Doors';

$windows is every window;

$doors is every door where
	name contains 'Ext' or
	description contains 'Ext' or
	IsExternal is true or
	Function = 1 or
	Reference contains 'Ext' or
	type name contains 'Ext' or
	type description contains 'Ext' or
	type IsExternal is true or
	type Function = 1
	;

Add $windows to $winDoorGroup;
Add $doors to $winDoorGroup;

//*********************************  Internal Doors  *********************************
$intDoorGroup is every group where description is 'Internal Doors';

$intDoors is every door where
	group description is not 'Internal Walls and Partitions'
	;

Add $intDoors to $intDoorGroup;

//*********************************  Stairs and Ramps  *********************************
$stairsGroup is every group where description is 'Stairs and Ramps';

$stair is every stair;
$stair is every stair_flight;
$stair is every railing where
	predefined type is 'HANDRAIL' or
	predefined type is 'GUARDRAIL' or
	predefined type is 'NOTDEFINED' or
	name contains 'Handrail' or
	type predefined type is 'HANDRAIL' or
	type predefined type is 'GUARDRAIL' or
	type predefined type is 'NOTDEFINED' or
	type name contains 'Handrail'
	;

$stair is every member where
	name contains 'stringer' or
	description contains 'stringer' or
	type name contains 'stringer' or
	type description contains 'stringer' or
	type predefined_type is 'STRINGER'
	;

$stair is every building_element_proxy where
	name contains 'riser' or
	name contains 'tread' or
	type name contains 'riser' or
	type name contains 'tread'
	;

$stair is every ramp_flight where function is 0;

Add $stair to $stairsGroup;

//*******************************  Frame  **********************************
$framingGroup is every group where description is 'Frame';

$framing is every column;

Add $framing to $framingGroup;

//****************************  Ceiling finishes  ***************************
$ceilingFinishGroup is every group where description is 'Ceiling finishes';

$ceilingFinish is every covering where 
	predefined type is 'CEILING' or
	type predefined type is 'CEILING'
	;

Add $ceilingFinish to $ceilingFinishGroup;

//****************************  Roads, Paths, Pavings and Surfacings  ***************************
$roadsGroup is every group where description is 'Roads, Paths, Pavings and Surfacings';

$roads is every ramp_flight where function is not 0;

Add $roads to $roadsGroup;

//****************************  General fittings, furnishings and equipment  ***************************
$furnishingGroup is every group where description is 'General fittings, furnishings and equipment';

$furniture is every IfcFurnishingElement;

Add $furniture to $furnishingGroup;

Save model to file 'Result.ifc';