<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xbim.Presentation</name>
    </assembly>
    <members>
        <member name="T:Xbim.Presentation.DynamicProductSelectionControl">
            <summary>
            This class can compile the code in the runtime and can be used to select 
            certain products with C# code;
            </summary>
            <summary>
            DynamicProductSelectionControl
            </summary>
        </member>
        <member name="M:Xbim.Presentation.DynamicProductSelectionControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Xbim.Presentation.FederatedModel.FederatedModelDialog">
            <summary>
            Interaction logic for fed1.xaml
            </summary>
            <summary>
            FederatedModelDialog
            </summary>
        </member>
        <member name="M:Xbim.Presentation.FederatedModel.FederatedModelDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Xbim.Presentation.FederatedModel.FederatedModelsGrid">
            <summary>
            Interaction logic for UserControl1.xaml
            </summary>
            <summary>
            FederatedModelsGrid
            </summary>
        </member>
        <member name="M:Xbim.Presentation.FederatedModel.FederatedModelsGrid.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Xbim.Presentation.LayerStylingV2.SurfaceLayerStyler.BuildScene(Xbim.IO.XbimModel,Xbim.ModelGeometry.Scene.Xbim3DModelContext,System.Collections.Generic.List{System.Type})">
            <summary>
            This version uses the new Geometry representation
            </summary>
            <param name="model"></param>
            <param name="context"></param>
            <param name="exclude">List of type to exclude, by default excplict openings and spaces are excluded if exclude = null</param>
            <returns></returns>
        </member>
        <member name="T:Xbim.Presentation.LayerStyling.ILayerStyler">
            <summary>
            Interface defining the functions needed to group and style elements to be visualised in the WPF 3D component.
            Note that it inherits from IGeomHandlesGrouping
            </summary>
        </member>
        <member name="M:Xbim.Presentation.LayerStyling.ILayerStyler.GetLayer(System.String,Xbim.IO.XbimModel,Xbim.ModelGeometry.Scene.XbimScene{Xbim.Presentation.WpfMeshGeometry3D,Xbim.Presentation.WpfMaterial})">
            <summary>
            returns a layer for the specified key 
            </summary>
            <param name="LayerKey">It's a string that is generated in the GroupLayers function of the IGeomHandlesGrouping interface.</param>
        </member>
        <member name="M:Xbim.Presentation.LayerStyling.ILayerStyler.IsVisibleLayer(System.String)">
            <summary>
            Returns a bool determining the visibility of a layer.
            </summary>
            <param name="key">Similar to layerkey in GetLayer</param>
            <returns></returns>
        </member>
        <member name="M:Xbim.Presentation.LayerStyling.ILayerStyler.SetFederationEnvironment(Xbim.IO.XbimReferencedModel)">
            <summary>
            Provides information to the styler in case the model to render belongs to a federation.
            Leave an empty body in case the behaviour of the styler is independent from the federation context.
            </summary>
            <param name="refModel">The federation environment; refModel will be null for the main federation file.</param>
        </member>
        <member name="P:Xbim.Presentation.LayerStyling.ILayerStyler.UseIfcSubStyles">
            <summary>
            Determines whether the engine creates sublayers depending on IFC styles in the model.
            </summary>
        </member>
        <member name="T:Xbim.Presentation.LayerStyling.LayerStylerEvenOdd">
            <summary>
            A sample styler that produces an arbitrary grouping in odd and even EntityLabels.
            </summary>
        </member>
        <member name="T:Xbim.Presentation.LayerStyling.LayerStylerTypeAndIFCStyleExtended">
            <summary>
            Demo layer styler for xBim Explorer in WPF.
            It's invoked through the Querying window.
            </summary>
        </member>
        <member name="M:Xbim.Presentation.LayerStyling.LayerStylerTypeAndIFCStyleExtended.#ctor">
            <summary>
            Default initialisation
            </summary>
        </member>
        <member name="T:Xbim.Presentation.LayerStyling.LayerStylerTypeAndIFCStyle">
            <summary>
            Default layer styler for xBim Explorer in WPF
            </summary>
        </member>
        <member name="M:Xbim.Presentation.LayerStyling.LayerStylerTypeAndIFCStyle.#ctor">
            <summary>
            Default initialisation
            </summary>
        </member>
        <member name="P:Xbim.Presentation.LayerStyling.LayerStylerTypeAndIFCStyle._LayerGrouper">
            <summary>
            this private member takes care of handling the IGeomHandlesGrouping interface
            </summary>
        </member>
        <member name="M:Xbim.Presentation.WpfExtensions.GrowBy(System.Windows.Media.Media3D.Point3DCollection,System.Int32)">
            <summary>
            Grows a collection by the required size
            </summary>
            <param name="pointColl"></param>
            <param name="growSize"></param>
        </member>
        <member name="M:Xbim.Presentation.WpfExtensions.GrowBy(System.Windows.Media.Media3D.Vector3DCollection,System.Int32)">
            <summary>
            Grows a collection by the required size
            </summary>
            <param name="pointColl"></param>
            <param name="growSize"></param>
        </member>
        <member name="M:Xbim.Presentation.WpfExtensions.GrowBy(System.Windows.Media.Int32Collection,System.Int32)">
            <summary>
            Grows a collection by the required size
            </summary>
            <param name="pointColl"></param>
            <param name="growSize"></param>
        </member>
        <member name="T:Xbim.Presentation.Xbim3DViewerControl">
            <summary>
            Interaction logic for Xbim3DViewerControl.xaml
            </summary>
            <summary>
            Xbim3DViewerControl
            </summary>
        </member>
        <member name="M:Xbim.Presentation.Xbim3DViewerControl.LoadGeometry(Xbim.IO.XbimModel,System.Boolean)">
            <summary>
            Clears the current graphics and initiates the cascade of events that result in viewing the scene.
            </summary>
            <param name="EntityLabels">If null loads the whole model, otherwise only elements listed in the enumerable</param>
        </member>
        <member name="M:Xbim.Presentation.Xbim3DViewerControl.BuildScene(Xbim.ModelGeometry.Scene.Xbim3DModelContext)">
            <summary>
            This version uses the new Geometry representation
            </summary>
            <param name="model"></param>
            <param name="context"></param>
            <param name="exclude">List of type to exclude, by default excplict openings and spaces are excluded if exclude = null</param>
            <returns></returns>
        </member>
        <member name="M:Xbim.Presentation.Xbim3DViewerControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Xbim.Presentation.MeshGeometry3DExtensions.Read(System.Windows.Media.Media3D.MeshGeometry3D,System.Byte[],System.Nullable{Xbim.Common.Geometry.XbimMatrix3D})">
            <summary>
            Reads a triangulated model from an array of bytes and adds the mesh to the current state
             </summary>
            <param name="m3D"></param>
            <param name="mesh">byte array of XbimGeometryType.PolyhedronBinary  Data</param>
            <param name="transform">Transforms the mesh to the new position if not null</param>
        </member>
        <member name="M:Xbim.Presentation.MeshGeometry3DExtensions.ReadIndex(System.IO.BinaryReader,System.Int32)">
            <summary>
            Reads a packed Xbim Triangle index from a stream
            </summary>
            <param name="br"></param>
            <param name="maxVertexCount">The size of the maximum number of vertices in the stream, i.e. the biggest index value</param>
            <returns></returns>
        </member>
        <member name="T:Xbim.Presentation.SynchronizedView">
            <summary>
            Interaction logic for SynchronizedView.xaml
            </summary>
            <summary>
            SynchronizedView
            </summary>
        </member>
        <member name="M:Xbim.Presentation.SynchronizedView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Xbim.Presentation.EntitySelection">
            <summary>
            Provides a container for entity selections capable of undo/redo operations and notification of changes.
            </summary>
        </member>
        <member name="M:Xbim.Presentation.EntitySelection.#ctor(System.Boolean)">
            <summary>
            Initialises an empty selection;
            </summary>
            <param name="KeepLogging">Set to True to enable activity logging for undo/redo operations.</param>
        </member>
        <member name="M:Xbim.Presentation.EntitySelection.Toggle(Xbim.XbimExtensions.Interfaces.IPersistIfcEntity)">
            <summary>
            Toggles the selection state of an IPersistIfcEntity
            </summary>
            <param name="item">the IPersistIfcEntity to add or remove from the selection</param>
            <returns>true if added; false if removed</returns>
        </member>
        <member name="M:Xbim.Presentation.ModelGeomInfo.PolylineGeomInfo.SetToVisual(HelixToolkit.Wpf.MeshVisual3D)">
            <summary>
            Creates a rather ugly visual representatino of the polyline.
            Fixed in size with respect to the model.
            </summary>
            <param name="Highlighted">The destination visual component to replace the content of.</param>
        </member>
        <member name="M:Xbim.Presentation.ModelGeomInfo.PolylineGeomInfo.Count">
            <summary>
            The count of points in the polyline
            </summary>
            <returns>an integer positive or 0 value.</returns>
        </member>
        <member name="M:Xbim.Presentation.ModelGeomInfo.PolylineGeomInfo.Clear">
            <summary>
            Empties the point collection.
            </summary>
        </member>
        <member name="M:Xbim.Presentation.ModelGeomInfo.PolylineGeomInfo.RemoveLast">
            <summary>
            Removes the last point in the underlying PointGeomInfo collection.
            </summary>
        </member>
        <member name="M:Xbim.Presentation.ColourRgbExtensions.ToColor(Xbim.Ifc2x3.PresentationResource.IfcColourRgb)">
            <summary>
              Converts a ColourRgb to a Windows Color
            </summary>
            <param name = "rgb"></param>
            <returns></returns>
        </member>
        <member name="M:Xbim.Presentation.ColourRgbExtensions.ToColor(Xbim.Ifc2x3.PresentationResource.IfcColourRgb,System.Double)">
            <summary>
              Converts to a Windows Color and applies the factor to each component
            </summary>
            <param name = "rgb"></param>
            <param name = "factor"></param>
            <returns></returns>
        </member>
        <member name="T:Xbim.Presentation.DrawingControl3D">
            <summary>
              Interaction logic for DrawingControl3D.xaml
            </summary>
            <summary>
            DrawingControl3D
            </summary>
        </member>
        <member name="M:Xbim.Presentation.DrawingControl3D.Highlighted_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            this method keeps meshes for TransHighlighted and Highlighted items in sync.
            </summary>
        </member>
        <member name="F:Xbim.Presentation.DrawingControl3D._selectedEntityChangeTriggedBySelectionChange">
            <summary>
            _SelectedEntityChangeTriggedBySelectionChange is introduced a temporary fix to allow the multiple selection mode to continue working and propagating the SelectedEntityChanged event.
            When selectedEntity is changed externally (value is false) then the Selection property is also impacted.
            </summary>
        </member>
        <member name="M:Xbim.Presentation.DrawingControl3D.HighlighSelected(Xbim.XbimExtensions.Interfaces.IPersistIfcEntity)">
            <summary>
            Executed when a new entity is selected
            </summary>
            <param name="newVal"></param>
        </member>
        <member name="M:Xbim.Presentation.DrawingControl3D.LoadGeometry(Xbim.IO.XbimModel,System.Collections.Generic.IEnumerable{System.Int32},Xbim.Presentation.DrawingControl3D.ModelRefreshOptions)">
            <summary>
            Clears the current graphics and initiates the cascade of events that result in viewing the scene.
            </summary>
            <param name="model"></param>
            <param name="entityLabels">If null loads the whole model, otherwise only elements listed in the enumerable</param>
            <param name="options"></param>
        </member>
        <member name="F:Xbim.Presentation.DrawingControl3D.LayerStyler">
            <summary>
            Provides a mechanism to define colouring schemes for elements in DrawingControl3D.
            After setting a new LayerStyler issue a ReloadModel (<see cref="M:Xbim.Presentation.DrawingControl3D.ReloadModel(Xbim.Presentation.DrawingControl3D.ModelRefreshOptions)"/>). 
            </summary>
        </member>
        <member name="F:Xbim.Presentation.DrawingControl3D.FederationLayerStyler">
            <summary>
            Provides a mechanism to define colouring schemes for elements in DrawingControl3D.
            After setting a new LayerStyler issue a ReloadModel (<see cref="M:Xbim.Presentation.DrawingControl3D.ReloadModel(Xbim.Presentation.DrawingControl3D.ModelRefreshOptions)"/>). 
            </summary>
        </member>
        <member name="M:Xbim.Presentation.DrawingControl3D.AddLayerToDrawingControl(Xbim.ModelGeometry.Scene.XbimMeshLayer{Xbim.Presentation.WpfMeshGeometry3D,Xbim.Presentation.WpfMaterial},System.Boolean)">
            <summary>
            Function that actually populates the geometry from the layer into the viewer meshes.
            If the <paramref name="isLayerVisible"/> is set to false layer becomes hidden.
            </summary>
        </member>
        <member name="M:Xbim.Presentation.DrawingControl3D.AddLayerToDrawingControl(Xbim.ModelGeometry.Scene.XbimMeshLayer{Xbim.Presentation.WpfMeshGeometry3D,Xbim.Presentation.WpfMaterial})">
            <summary>
            function that actually populates the geometry from the layer into the viewer meshes.
            </summary>
        </member>
        <member name="M:Xbim.Presentation.DrawingControl3D.ListItems(System.String)">
            <summary>
            Returns the list of nested visual elements.
            </summary>
            <param name="ofItem">Valid names are for instance: Opaques, Transparents, BuildingModel, cuttingGroup...</param>
            <returns>IEnumerable names</returns>
        </member>
        <member name="M:Xbim.Presentation.DrawingControl3D.LayersTree">
            <summary>
            Useful for analysis and debugging purposes (invoked by Querying interface)
            </summary>
            <returns>A string tree of layers in scenes</returns>
        </member>
        <member name="M:Xbim.Presentation.DrawingControl3D.Hide``1">
            <summary>
              Hides all instances of the specified type
            </summary>
        </member>
        <member name="M:Xbim.Presentation.DrawingControl3D.ClipBaseSelected(System.Double)">
            <summary>
            This functions sets a cutting plane at a distance of delta over the base of the selected element.
            It is useful when the selected element is obscured by elements surrounding it.
            </summary>
            <param name="delta">positive distance of the cutting plane above the base of the selected element.</param>
        </member>
        <member name="M:Xbim.Presentation.DrawingControl3D.ZoomTo(System.Windows.Media.Media3D.Rect3D,System.Boolean)">
            <summary>
            Zooms to a selected portion of the space.
            </summary>
            <param name="r3D">The box to be zoomed to</param>
            <param name="doubleRectSize">Effectively doubles the size of the bounding box so to fit more space around it.</param>
        </member>
        <member name="M:Xbim.Presentation.DrawingControl3D.CreateThumbnail(Xbim.IO.XbimModel,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            create a bitmap image of the required size and saves to the specificed file. Title is printed if specified
            </summary>
            <param name="model"></param>
            <param name="bmpFileName"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="title"></param>
        </member>
        <member name="F:Xbim.Presentation.DrawingControl3D.Opaques">
            <summary>
            Opaques Name Field
            </summary>
        </member>
        <member name="M:Xbim.Presentation.DrawingControl3D.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Xbim.Presentation.DrawingControl3D.Model3D">
            <summary>
            Gets or sets the model.
            </summary>
            <value>The model.</value>
        </member>
        <member name="T:Xbim.Presentation.IfcMetaDataControl">
            <summary>
              Interaction logic for IfcMetaDataControl.xaml
            </summary>
            <summary>
            IfcMetaDataControl
            </summary>
        </member>
        <member name="M:Xbim.Presentation.IfcMetaDataControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Xbim.Presentation.ScriptingControl">
            <summary>
            Interaction logic for ScriptingWindow.xaml
            </summary>
            <summary>
            ScriptingControl
            </summary>
        </member>
        <member name="M:Xbim.Presentation.ScriptingControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Xbim.Presentation.ModelDataProvider.Materials">
            <summary>
              Dictionary of shared materials, key is normally an Ifc object that the material represents
            </summary>
        </member>
        <member name="M:Xbim.Presentation.SurfaceStyleExtensions.ToMaterial(Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceStyle)">
            <summary>
              Returns a material corresponding to this surface style, materials are cached in the ModelDataProvider
            </summary>
            <param name = "sStyle"></param>
            <returns></returns>
        </member>
        <member name="T:Xbim.Presentation.ToolTipContentProviderDelegate">
            <summary>
              returns the content of a ToolTip displayed for object tag
            </summary>
        </member>
        <member name="M:Xbim.Presentation.WpfMeshGeometry3D.Add(Xbim.XbimExtensions.XbimGeometryData,System.Int16)">
            <summary>
            Do not use this rather create a XbimMeshGeometry3D first and construct this from it, appending WPF collections is slow
            </summary>
            <param name="geometryMeshData"></param>
            <param name="modelId"></param>
        </member>
        <member name="M:Xbim.Presentation.WpfMeshGeometry3D.Read(System.Byte[],System.Nullable{Xbim.Common.Geometry.XbimMatrix3D})">
            <summary>
            Reads a triangulated mesh from a byte array 
            </summary>
            <param name="mesh">the binary data of the mesh</param>
            <param name="transform">transforms the mesh if the matrix is not null</param>
        </member>
        <member name="M:Xbim.Presentation.WpfMeshGeometry3D.EndUpdate">
            <summary>
            Ends an update and freezes the geometry
            </summary>
        </member>
        <member name="M:Xbim.Presentation.XbimMaterialProvider.#ctor(System.Windows.Media.Media3D.Material,System.Boolean)">
            <summary>
              Sets face and background Material to material
            </summary>
            <param name = "material"></param>
        </member>
        <member name="M:Xbim.Presentation.XbimModelPresentationExtensions.GetInstancesOfMaterial(Xbim.XbimExtensions.Interfaces.IXbimInstanceCollection,Xbim.XbimExtensions.SelectTypes.IfcMaterialSelect,System.Boolean)">
            <summary>
            Returns the list of Object in a IfcRelAssociatesMaterial with the specified material select.
            </summary>
            <param name="matSel">The material select to search.</param>
            <param name="DeepSearch">
            True if the function needs to execute a deeper semantical analysis of the relations (it can expand the query result).
            False if a direct analysis of explicit associations with the specific MaterialSet.
            </param>
        </member>
        <member name="T:Xbim.Presentation.FederatedModel.XbimReferencedModelViewModel">
            <summary>
            This class can hold all data neccesary to create a XbimReferencedModel.
            The purpose of this class is to hold data until it's complete enough to create a XbimReferencedModel. Once created, the model will be preserved in this object
            </summary>
        </member>
        <member name="M:Xbim.Presentation.FederatedModel.XbimReferencedModelViewModel.TryBuild(Xbim.IO.XbimModel)">
            <summary>
            Validates all data and creates model. 
            Provide a "XbimModel model = DataContext as XbimModel;"
            </summary>
            <returns>Returns XbimReferencedModel == null </returns>
        </member>
        <member name="M:Xbim.Presentation.XplorerPluginSystem.IXbimXplorerPluginMasterWindow.BroadCastMessage(System.Object,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="messageTypeString"></param>
            <param name="messageData"></param>
        </member>
        <member name="M:Xbim.Presentation.XplorerPluginSystem.IXbimXplorerPluginMasterWindow.RefreshPlugins">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xbim.Presentation.XplorerPluginSystem.IXbimXplorerPluginMasterWindow.SelectedItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xbim.Presentation.XplorerPluginSystem.IXbimXplorerPluginMasterWindow.Model">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
